Instalujemy JDK
Google > JDK Download > Wybieramy pierwszy z linków (Oracle.com ...)
cmd java -version		- sprawdzenie wersji JAVA
Sprawdzamy Zmienne środowiskowe - PATH - C:\Program Files\Java\jdk-21\bin
---------
Instalujemy MAVEN - narzędzie pomaga w pobieraniu plików jar z internetu i używanie w naszym pliku
Google > download maven > pierwszy z listy (maven.apache.org/download.cgi)
Wrzucamy gdzies na dysk
W zmienny środowiskowych ustawiamy w PAth
Dodajemy ścieżkę w Path do katalogu bin tam gdzie wgraliśmy Mavena
Tworzymy zmienną MAVEN_HOME i ustawiamy tę samą ścieżkę do bin MAVENA
cmd mvn - v				- sprawdzenie czy działa MAVEN
----------
Instalujemy InteliJ
Google > InteliJ  (jetbrains.com/idea > Dawnload).
Zaznaczamy podczas instalacji Update PATH (zmienne środowiskowe)  - restart konieczny
----------
Tworzymy nowy project - to tylko dla sprawdzenia - opcjonalne
Wybieramy z drzewka folder Src > Prawym i new i Java class
javac nazwa_pliku.java	- kompilowanie pliku z kodem (z .java na .class) 
javac sciezka do pliku  - (chyba że w tym katalogu siedzimy)
java nazwa_pliku		- wywołanie programu bez żadnych rozszerzeń
----------
GITHUB 
Google > Github (repo online dla projektów przechowywanych w GIT).
Szukamy Po prawej u góry np selenium test
Możemy ograniczyć do wybranego języka np Java
w src sa pliczki
sa opisy jak to uruchamiać
----------
Instalujemy GIT - git jest konieczny dla InteliJ
Google > Git downloads (https://git-scm.com/downloads)
Instalujemy
W trakcie wskazujemy domyślny edytor dla gita np. Notepad++
Nic nie zmieniamy tylko ten edytor i next next instal.
Uruchamiamy GIT Bash - jeżeli się podpowie to jest OK.
----------

Tworzenie konta i repozytorium na GITHUB

github.com - tworzymy konto na github za pomocą maila i podajemy hasło
------------
TWorzymy repozytorium zdalne na github
W zakładce Repositorium >> wybiera New
Podajemy Nazwę i opisy
Okręślamy Public czy Private ( Public - wszyscy widzą , nie każdy może commitować).
Nie dodajemy gitignore, nie dodajemy READ ME i nie dodajemy info o licencji
Create repository
POjawia sie ścieżka do naszego repo. (https://github.com/szkoleniedwblog/testgita.git)
i cała instrukcja jak tego użyć.

I TERAZ MOŻEMY SKLONOWAĆ TO REPOZYTORIUM DO NASZEGO LPKALNEGO KOMPA
LUB UTWORZYĆ SOBIE LOKALNIE REPO I WYPCHNĄC NA GITHUBBA - OPISANE W PLIKU Z GIT

----------------------
W pliku z GIT Opisane jest także jak wygenrowac sobie klucz SSH i dopisac je na githubie, żeby
nie trzeba sie było logowac za każdym razem, gdy chcemy coś wypchnąć.

-----------
Jeżeli nie tworzymy rpozytorium lokalnego zaczynając nasza pracę tylko pobieramy gotowe z GITHUBA
Wchodzimy na GITHUB 
Wchodzimy do repozytorium, któe chcemy pobrać
Wybieramy zakładkę Code
Naciskamy przycisk - zielony CODE 
W otwartym oknie - Na zakładce Local wybieramy opcję SSH i wciskamy Copy obok adresu (clonujemy repo)
Możemy też pobrać repozytorium w formie ZIP - poniżej ale na razie nie robimy

Skpiowany adres SSH 
W naszej konsoli wychodzimy z anaszego repozytroium komenndą cd ..
Tworzymy nowy folder za pomocą komendy mkdir newRepo
Wchodzimy do tego folderu cd newRepo
siedząc w tym katalogu tworzymy z niego kopię naszego sclonowanego repo zdalnego
git clone wklejamy skopiowany adres SSH tzn np. 
git clone git@github.com:szkoleniedwblog/testgita.git

gdy wpiszemy ls wyświetli nam się lista zawartości i powinien być katalog z repozytorium
w naszym przypadku jest to katalog testgita 

wchodzimy do tego katalogu cd testgita
i tu wpisujemy git status i powinniśmy mieć info o branchu master

---------------
TortoiseGIT
Jest to narzędzie do Windowsa, które ułatwia pracę z GITem.
Jest to narzędzie, które pozwala zintegrować edytory kodu typu InteliJ z GITem
Google - szukamy TortoiseGIT
wybieramy pierwszy linków tortoisegit.org/download
pobieramy pliczek 64bit
nic nie zmieniamy tylko next next install Finish
Później znów wszystko domyśłne - nic nie zmianiamy
Gdy na katalogu z repozytorium gita klikniemy prawym przyciskiem w menu będą opcje TortoiseGita
teraz już nie musimy korzystać z konsoli Bash żeby gadać z gitem.
Teraz możemy wszystkie komendy wykonać z poziomu katalogu i menu podręcznego

Przykłądy
Tworzymy dowolny katalog np TortoiseGitRepo
wchodzimy 
klikamy na przestrzeń w katalogu i z menu podręcznego wybieramy git clone
w otwartym oknie możemy wkleić nasz adres z repo na GITHUBIE (adres SSH)

Jeżęli nie chcemy clonować repo z GITHUBA to możemy zamiast Git Clone wybrać opcję
Git Create Repo here
w takim katalogu twrzy się katalog .git - usuwamy go i jednak sklonujemy sobie istniejące
na GITHUBIE
z GITHUba kopiujemy adres repo ale tym razem HTTPS
wybieramy w akatalogu prawym przyciskiem i z menu Git Clone
i wpisujemy adres z githuba
i się tworzy repo
możemy teraz operowac na plikach i wyboerać z amnu wszystkie komendy gita
typu add, commit, push

-------------------
Integrujemy InteliJ z Git
W tym celu w oknie startowym InteliJ wybieramy przycisk Get from VCS (tzn. Version Control System)
Z GITHUBA kopiujemy adres SSH naszego repozytorium
Wklejamy w InteliJ w polu URL

np. git@github.com:szkoleniedwblog/testgita.git

wybieramy opcję CLONE - póżniej w oknie przycisk Trust

W podanym katalogu tworzy nam się lokalna kopia naszego repo z GITHUBA

Na dole w InteliJ mamy opcję GIT


-------------------------------------
Żeby w InteliJ pojawiały się nam zmiany localne należy zmienić:
Settings > Version Control > Changelist - zaznaczony tylko checkbox - Allow putting ...
Settings > Version Control > Commit - wyłączamy checkbox - Use non-modal coomit interface

W opcji GIT nadole ekranu będą nam się na bieąco pojawiały lokalne zmiany w plikach, któe potencjalnie sa do
skomitowania i wypchnięcia na GITHUBa








